#################################################################################
#  Copyright (c) 2023 ZF Friedrichshafen AG
#  Copyright (c) 2023 Mercedes-Benz Tech Innovation GmbH
#  Copyright (c) 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
# Default values for eclipse-dataspace-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
txdc:
  install:
    postgresql: true
    vault: false

  fullnameOverride: tx-prod-sharing
    ################################
    # EDC ControlPlane + DataPlane #
  ################################
  participant:
    #consumer
    id: "BPNL00000007RWSMXXX"
  iatp:
    # Decentralized IDentifier
    id: "did:web:portal-backend.int.demo.catena-x.net:api:administration:staticdata:did:BPNL00000007RWSM"
    trustedIssuers: # array [] that needs to be expand but likely like (sorry unconfirmed on how this is done, as I also would need to check)
      - "did:web:dim-static-prod.dis-cloud-prod.cfapps.eu10-004.hana.ondemand.com:dim-hosted:2f45795c-d6cc-4038-96c9-63cedc0cd266:holder-iatp"
    sts:
      dim:
        url: "https://dis-integration-service-prod.eu10.dim.cloud.sap/api/v2.0.0/iatp/catena-x-portal"
      oauth:
        token_url: "https://bpnl00000007rwsm-bpdm--sharing--member.authentication.eu10.hana.ondemand.com/oauth/token"
        client:
          id: "sb-113caf5c-1f90-46bf-83f9-59313e40ea84!b459173|ica-production-dim-prod-eu10-004-prod-dis-cloud-approuter!b174292"
          secret_alias: "country-risk/int/edc-consumer/CLIENT_SECRET"
  controlplane:
    env:
      #TX_IAM_IATP_CREDENTIALSERVICE_URL: "https://6c4a-2001-8a0-fbd0-3700-618d-216b-3353-9ec7.ngrok-free.app"
      EDC_IAM_TRUSTED-ISSUER_ISSUER1_ID: 'did:web:dim-static-prod.dis-cloud-prod.cfapps.eu10-004.hana.ondemand.com:dim-hosted:2f45795c-d6cc-4038-96c9-63cedc0cd266:holder-iatp'
      #EDC_IAM_DID_WEB_USE_HTTPS: false
    bdrs:
      server:
        url: 'https://bpn-did-resolution-service.int.demo.catena-x.net/api/directory'
    ingresses:
      ## Public / Internet facing Ingress
      - enabled: true
        # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
        hostname: "country-risk-edc-consumer.int.demo.catena-x.net"
        # -- EDC endpoints exposed by this ingress resource
        endpoints:
          - management
          - control
          - protocol

        # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
        className: "nginx"
        # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
        tls:
          # -- Enables TLS on the ingress resource
          enabled: true
          # -- If present overwrites the default secret name
          secretName: tls-secret
    service:
      type: NodePort
    endpoints:
      management:
        authKey: <path:value-added-service/data/country-risk/int/edc#controlplane-auth>
    image:
      pullPolicy: Always
      tag: "0.7.0"
      #repository: "edc-controlplane-postgresql-hashicorp-vault"
    securityContext:
      # avoids some errors in the log: cannot write temp files of large multipart requests when R/O
      readOnlyRootFilesystem: false
  dataplane:
    endpoints:
      proxy:
        authKey: <path:value-added-service/data/country-risk/int/edc#controlplane-auth>
    image:
      pullPolicy: Always
      tag: "0.7.0"
      #repository: "edc-dataplane-hashicorp-vault"
    env:
      EDC_IAM_TRUSTED-ISSUER_ISSUER1_ID: 'did:web:dim-static-prod.dis-cloud-prod.cfapps.eu10-004.hana.ondemand.com:dim-hosted:2f45795c-d6cc-4038-96c9-63cedc0cd266:holder-iatp'
    ingresses:
      ## Public / Internet facing Ingress
      - enabled: true
        # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
        hostname: "country-risk-edc-consumer.int.demo.catena-x.net"
        # -- EDC endpoints exposed by this ingress resource
        endpoints:
          - public
        # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
        className: "nginx"
        # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
        tls:
          # -- Enables TLS on the ingress resource
          enabled: true
          # -- If present overwrites the default secret name
          secretName: tls-secret
    securityContext:
      # avoids some errors in the log: cannot write temp files of large multipart requests when R/O
      readOnlyRootFilesystem: false
    aws:
      endpointOverride: http://minio:9000
      secretAccessKey: qwerty123
      accessKeyId: qwerty123
    token:
      signer:
        privatekey_alias: "country-risk/int/edc-provider/DAPS_PRIVATE_KEY"
      verifier:
        publickey_alias: "country-risk/int/edc-provider/DAPS_PUBLIC_KEY"
  postgresql:
    jdbcUrl: jdbc:postgresql://country-risk-edc-sharing-postgresql:5432/edc
    auth:
      username: user
      password: password
  vault:
    hashicorp:
      url: "https://vault.demo.catena-x.net"
      token: <path:value-added-service/data/country-risk/int/edc#vault-token-cr>
      paths:
        secret: /v1/value-added-service
    secretNames:
      transferProxyTokenEncryptionAesKey: aes-keys
      # this must be set through CLI args: --set vault.secrets=$YOUR_VAULT_SECRETS where YOUR_VAULT_SECRETS should
      # be a string in the format "key1:secret1;key2:secret2;..."
      secrets:
    # the post-start object is still needed for the upgradeability test
    # todo: remove this after 0.7.0 is released
    server:
      postStart:
        - sh
        - -c
        - |-
          {
          sleep 5
          
          /bin/vault kv put secret/client-secret content=kEmH7QRPWhKfy8f+x0pFMw==
          
          /bin/vault kv put secret/aes-keys content=YWVzX2VuY2tleV90ZXN0Cg==
          }
  backendService:
    httpProxyTokenReceiverUrl: "http://backend:8080"
  tests:
    hookDeletePolicy: before-hook-creation